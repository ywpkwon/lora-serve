
from typing import List, AsyncIterator, Protocol
from ...core.types import GenerateRequest, GenerateResult, VerifyRequest, VerifyResult

class IEngine(Protocol):
    async def warmup(self) -> None: ...
    async def attach_adapter(self, adapter_id: str, path: str) -> None: ...
    async def detach_adapter(self, adapter_id: str) -> None: ...
    async def generate_batch(self, reqs: List[GenerateRequest]) -> List[GenerateResult]: ...
    async def stream_generate_batch(self, reqs: List[GenerateRequest]) -> List[AsyncIterator[GenerateResult]]: ...
    async def verify_batch(self, reqs: List[VerifyRequest]) -> List[VerifyResult]: ...
